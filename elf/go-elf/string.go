// Code generated by "stringer -type FileType,Class,Data,ProgramHeaderFlag,ProgramHeaderType,SectionHeaderFlag,SectionHeaderType -output string.go"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ET_NONE-0]
	_ = x[ET_REL-1]
	_ = x[ET_EXEC-2]
	_ = x[ET_DYN-3]
	_ = x[ET_CORE-4]
	_ = x[ET_LOOS-65024]
	_ = x[ET_HIOS-65279]
	_ = x[ET_LOPROC-65280]
	_ = x[ET_HIPROC-65535]
}

const (
	_FileType_name_0 = "ET_NONEET_RELET_EXECET_DYNET_CORE"
	_FileType_name_1 = "ET_LOOS"
	_FileType_name_2 = "ET_HIOSET_LOPROC"
	_FileType_name_3 = "ET_HIPROC"
)

var (
	_FileType_index_0 = [...]uint8{0, 7, 13, 20, 26, 33}
	_FileType_index_2 = [...]uint8{0, 7, 16}
)

func (i FileType) String() string {
	switch {
	case i <= 4:
		return _FileType_name_0[_FileType_index_0[i]:_FileType_index_0[i+1]]
	case i == 65024:
		return _FileType_name_1
	case 65279 <= i && i <= 65280:
		i -= 65279
		return _FileType_name_2[_FileType_index_2[i]:_FileType_index_2[i+1]]
	case i == 65535:
		return _FileType_name_3
	default:
		return "FileType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ELFCLASSNONE-0]
	_ = x[ELFCLASS32-1]
	_ = x[ELFCLASS64-2]
}

const _Class_name = "ELFCLASSNONEELFCLASS32ELFCLASS64"

var _Class_index = [...]uint8{0, 12, 22, 32}

func (i Class) String() string {
	if i >= Class(len(_Class_index)-1) {
		return "Class(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Class_name[_Class_index[i]:_Class_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ELFDATANONE-0]
	_ = x[ELFDATA2LSB-1]
	_ = x[ELFDATA2MSB-2]
}

const _Data_name = "ELFDATANONEELFDATA2LSBELFDATA2MSB"

var _Data_index = [...]uint8{0, 11, 22, 33}

func (i Data) String() string {
	if i >= Data(len(_Data_index)-1) {
		return "Data(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Data_name[_Data_index[i]:_Data_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PF_X-1]
	_ = x[PF_W-2]
	_ = x[PF_R-4]
}

const (
	_ProgramHeaderFlag_name_0 = "PF_XPF_W"
	_ProgramHeaderFlag_name_1 = "PF_R"
)

var (
	_ProgramHeaderFlag_index_0 = [...]uint8{0, 4, 8}
)

func (i ProgramHeaderFlag) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _ProgramHeaderFlag_name_0[_ProgramHeaderFlag_index_0[i]:_ProgramHeaderFlag_index_0[i+1]]
	case i == 4:
		return _ProgramHeaderFlag_name_1
	default:
		return "ProgramHeaderFlag(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PT_NULL-0]
	_ = x[PT_LOAD-1]
	_ = x[PT_DYNAMIC-2]
	_ = x[PT_INTERP-3]
	_ = x[PT_NOTE-4]
	_ = x[PT_SHLIB-5]
	_ = x[PT_PHDR-6]
	_ = x[PT_LOPROC-1879048192]
	_ = x[PT_HIPROC-2147483647]
}

const (
	_ProgramHeaderType_name_0 = "PT_NULLPT_LOADPT_DYNAMICPT_INTERPPT_NOTEPT_SHLIBPT_PHDR"
	_ProgramHeaderType_name_1 = "PT_LOPROC"
	_ProgramHeaderType_name_2 = "PT_HIPROC"
)

var (
	_ProgramHeaderType_index_0 = [...]uint8{0, 7, 14, 24, 33, 40, 48, 55}
)

func (i ProgramHeaderType) String() string {
	switch {
	case i <= 6:
		return _ProgramHeaderType_name_0[_ProgramHeaderType_index_0[i]:_ProgramHeaderType_index_0[i+1]]
	case i == 1879048192:
		return _ProgramHeaderType_name_1
	case i == 2147483647:
		return _ProgramHeaderType_name_2
	default:
		return "ProgramHeaderType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SHF_WRITE-1]
	_ = x[SHF_ALLOC-2]
	_ = x[SHF_EXECINSTR-4]
	_ = x[SHF_MERGE-16]
	_ = x[SHF_STRINGS-32]
	_ = x[SHF_INFO_LINK-64]
	_ = x[SHF_LINK_ORDER-128]
	_ = x[SHF_OS_NONCONFORMING-256]
	_ = x[SHF_GROUP-512]
	_ = x[SHF_TLS-1024]
	_ = x[SHF_MASKOS-267386880]
	_ = x[SHF_MASKPROC-4026531840]
	_ = x[SHF_ORDERED-67108864]
	_ = x[SHF_EXCLUDE-134217728]
}

const _SectionHeaderFlag_name = "SHF_WRITESHF_ALLOCSHF_EXECINSTRSHF_MERGESHF_STRINGSSHF_INFO_LINKSHF_LINK_ORDERSHF_OS_NONCONFORMINGSHF_GROUPSHF_TLSSHF_ORDEREDSHF_EXCLUDESHF_MASKOSSHF_MASKPROC"

var _SectionHeaderFlag_map = map[SectionHeaderFlag]string{
	1:          _SectionHeaderFlag_name[0:9],
	2:          _SectionHeaderFlag_name[9:18],
	4:          _SectionHeaderFlag_name[18:31],
	16:         _SectionHeaderFlag_name[31:40],
	32:         _SectionHeaderFlag_name[40:51],
	64:         _SectionHeaderFlag_name[51:64],
	128:        _SectionHeaderFlag_name[64:78],
	256:        _SectionHeaderFlag_name[78:98],
	512:        _SectionHeaderFlag_name[98:107],
	1024:       _SectionHeaderFlag_name[107:114],
	67108864:   _SectionHeaderFlag_name[114:125],
	134217728:  _SectionHeaderFlag_name[125:136],
	267386880:  _SectionHeaderFlag_name[136:146],
	4026531840: _SectionHeaderFlag_name[146:158],
}

func (i SectionHeaderFlag) String() string {
	if str, ok := _SectionHeaderFlag_map[i]; ok {
		return str
	}
	return "SectionHeaderFlag(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SHT_NULL-0]
	_ = x[SHT_PROGBITS-1]
	_ = x[SHT_SYMTAB-2]
	_ = x[SHT_STRTAB-3]
	_ = x[SHT_RELA-4]
	_ = x[SHT_HASH-5]
	_ = x[SHT_DYNAMIC-6]
	_ = x[SHT_NOTE-7]
	_ = x[SHT_NOBITS-8]
	_ = x[SHT_REL-9]
	_ = x[SHT_SHLIB-10]
	_ = x[SHT_DYNSYM-11]
	_ = x[SHT_LOPROC-1879048192]
	_ = x[SHT_HIPROC-2147483647]
	_ = x[SHT_LOUSER-2147483648]
	_ = x[SHT_HIUSER-4294967295]
}

const (
	_SectionHeaderType_name_0 = "SHT_NULLSHT_PROGBITSSHT_SYMTABSHT_STRTABSHT_RELASHT_HASHSHT_DYNAMICSHT_NOTESHT_NOBITSSHT_RELSHT_SHLIBSHT_DYNSYM"
	_SectionHeaderType_name_1 = "SHT_LOPROC"
	_SectionHeaderType_name_2 = "SHT_HIPROCSHT_LOUSER"
	_SectionHeaderType_name_3 = "SHT_HIUSER"
)

var (
	_SectionHeaderType_index_0 = [...]uint8{0, 8, 20, 30, 40, 48, 56, 67, 75, 85, 92, 101, 111}
	_SectionHeaderType_index_2 = [...]uint8{0, 10, 20}
)

func (i SectionHeaderType) String() string {
	switch {
	case i <= 11:
		return _SectionHeaderType_name_0[_SectionHeaderType_index_0[i]:_SectionHeaderType_index_0[i+1]]
	case i == 1879048192:
		return _SectionHeaderType_name_1
	case 2147483647 <= i && i <= 2147483648:
		i -= 2147483647
		return _SectionHeaderType_name_2[_SectionHeaderType_index_2[i]:_SectionHeaderType_index_2[i+1]]
	case i == 4294967295:
		return _SectionHeaderType_name_3
	default:
		return "SectionHeaderType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
